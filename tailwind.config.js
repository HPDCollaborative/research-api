import defaultTheme from 'tailwindcss/defaultTheme';
import typography from '@tailwindcss/typography';
import { addDynamicIconSelectors } from '@iconify/tailwind';
import { defaultColors } from './bin/defaultColors.js';

/**
 * @type {import('tailwindcss').Config}
 */
export default {
  content: ['./.vitepress/theme/**/*.{vue,js,ts,jsx,tsx}', './src/**/*.{md,svg}'],
  darkMode: 'class',
  theme: {
    colors: defaultColors,
    extend: {
      gridTemplateColumns: {
        large: 'minmax(min-content, 18rem) 1fr',
        small: '0 100%',
        outline: '1fr minmax(min-content, 18rem)',
        noline: '100% 0',
      },
      gridTemplateRows: {
        layout: 'auto 1fr auto',
        content: '1fr min-content',
      },
      colors: {
        primary: {
          50: 'lch(var(--color-primary-50) / <alpha-value>)',
          100: 'lch(var(--color-primary-100) / <alpha-value>)',
          200: 'lch(var(--color-primary-200) / <alpha-value>)',
          300: 'lch(var(--color-primary-300) / <alpha-value>)',
          400: 'lch(var(--color-primary-400) / <alpha-value>)',
          500: 'lch(var(--color-primary-500) / <alpha-value>)',
          600: 'lch(var(--color-primary-600) / <alpha-value>)',
          700: 'lch(var(--color-primary-700) / <alpha-value>)',
          800: 'lch(var(--color-primary-800) / <alpha-value>)',
          900: 'lch(var(--color-primary-900) / <alpha-value>)',
          950: 'lch(var(--color-primary-950) / <alpha-value>)',
        },
        secondary: {
          50: 'lch(var(--color-secondary-50) / <alpha-value>)',
          100: 'lch(var(--color-secondary-100) / <alpha-value>)',
          200: 'lch(var(--color-secondary-200) / <alpha-value>)',
          300: 'lch(var(--color-secondary-300) / <alpha-value>)',
          400: 'lch(var(--color-secondary-400) / <alpha-value>)',
          500: 'lch(var(--color-secondary-500) / <alpha-value>)',
          600: 'lch(var(--color-secondary-600) / <alpha-value>)',
          700: 'lch(var(--color-secondary-700) / <alpha-value>)',
          800: 'lch(var(--color-secondary-800) / <alpha-value>)',
          900: 'lch(var(--color-secondary-900) / <alpha-value>)',
          950: 'lch(var(--color-secondary-950) / <alpha-value>)',
        },
        accent: {
          50: 'lch(var(--color-accent-50) / <alpha-value>)',
          100: 'lch(var(--color-accent-100) / <alpha-value>)',
          200: 'lch(var(--color-accent-200) / <alpha-value>)',
          300: 'lch(var(--color-accent-300) / <alpha-value>)',
          400: 'lch(var(--color-accent-400) / <alpha-value>)',
          500: 'lch(var(--color-accent-500) / <alpha-value>)',
          600: 'lch(var(--color-accent-600) / <alpha-value>)',
          700: 'lch(var(--color-accent-700) / <alpha-value>)',
          800: 'lch(var(--color-accent-800) / <alpha-value>)',
          900: 'lch(var(--color-accent-900) / <alpha-value>)',
          950: 'lch(var(--color-accent-950) / <alpha-value>)',
        },
        success: {
          50: 'lch(var(--color-success-50) / <alpha-value>)',
          100: 'lch(var(--color-success-100) / <alpha-value>)',
          200: 'lch(var(--color-success-200) / <alpha-value>)',
          300: 'lch(var(--color-success-300) / <alpha-value>)',
          400: 'lch(var(--color-success-400) / <alpha-value>)',
          500: 'lch(var(--color-success-500) / <alpha-value>)',
          600: 'lch(var(--color-success-600) / <alpha-value>)',
          700: 'lch(var(--color-success-700) / <alpha-value>)',
          800: 'lch(var(--color-success-800) / <alpha-value>)',
          900: 'lch(var(--color-success-900) / <alpha-value>)',
          950: 'lch(var(--color-success-950) / <alpha-value>)',
        },
        info: {
          50: 'lch(var(--color-info-50) / <alpha-value>)',
          100: 'lch(var(--color-info-100) / <alpha-value>)',
          200: 'lch(var(--color-info-200) / <alpha-value>)',
          300: 'lch(var(--color-info-300) / <alpha-value>)',
          400: 'lch(var(--color-info-400) / <alpha-value>)',
          500: 'lch(var(--color-info-500) / <alpha-value>)',
          600: 'lch(var(--color-info-600) / <alpha-value>)',
          700: 'lch(var(--color-info-700) / <alpha-value>)',
          800: 'lch(var(--color-info-800) / <alpha-value>)',
          900: 'lch(var(--color-info-900) / <alpha-value>)',
          950: 'lch(var(--color-info-950) / <alpha-value>)',
        },
        warning: {
          50: 'lch(var(--color-warning-50) / <alpha-value>)',
          100: 'lch(var(--color-warning-100) / <alpha-value>)',
          200: 'lch(var(--color-warning-200) / <alpha-value>)',
          300: 'lch(var(--color-warning-300) / <alpha-value>)',
          400: 'lch(var(--color-warning-400) / <alpha-value>)',
          500: 'lch(var(--color-warning-500) / <alpha-value>)',
          600: 'lch(var(--color-warning-600) / <alpha-value>)',
          700: 'lch(var(--color-warning-700) / <alpha-value>)',
          800: 'lch(var(--color-warning-800) / <alpha-value>)',
          900: 'lch(var(--color-warning-900) / <alpha-value>)',
          950: 'lch(var(--color-warning-950) / <alpha-value>)',
        },
        danger: {
          50: 'lch(var(--color-danger-50) / <alpha-value>)',
          100: 'lch(var(--color-danger-100) / <alpha-value>)',
          200: 'lch(var(--color-danger-200) / <alpha-value>)',
          300: 'lch(var(--color-danger-300) / <alpha-value>)',
          400: 'lch(var(--color-danger-400) / <alpha-value>)',
          500: 'lch(var(--color-danger-500) / <alpha-value>)',
          600: 'lch(var(--color-danger-600) / <alpha-value>)',
          700: 'lch(var(--color-danger-700) / <alpha-value>)',
          800: 'lch(var(--color-danger-800) / <alpha-value>)',
          900: 'lch(var(--color-danger-900) / <alpha-value>)',
          950: 'lch(var(--color-danger-950) / <alpha-value>)',
        },
        surface: {
          50: 'lch(var(--color-surface-50) / <alpha-value>)',
          100: 'lch(var(--color-surface-100) / <alpha-value>)',
          200: 'lch(var(--color-surface-200) / <alpha-value>)',
          300: 'lch(var(--color-surface-300) / <alpha-value>)',
          400: 'lch(var(--color-surface-400) / <alpha-value>)',
          500: 'lch(var(--color-surface-500) / <alpha-value>)',
          600: 'lch(var(--color-surface-600) / <alpha-value>)',
          700: 'lch(var(--color-surface-700) / <alpha-value>)',
          800: 'lch(var(--color-surface-800) / <alpha-value>)',
          900: 'lch(var(--color-surface-900) / <alpha-value>)',
          950: 'lch(var(--color-surface-950) / <alpha-value>)',
        },
      },
      fontFamily: {
        sans: ['Poppins', ...defaultTheme.fontFamily.sans],
      },
    },
  },
  safelist: ['table-of-contents'],
  plugins: [typography, addDynamicIconSelectors()],
};
